#title = tags$img(src='https://cdn.vox-cdn.com/thumbor/Ous3VQj1sn4tvb3H13rIu8eGoZs=/0x0:2012x1341/1400x788/filters:focal(0x0:2012x1341):format(jpeg)/cdn.vox-cdn.com/uploads/chorus_image/image/47070706/google2.0.0.jpg', height = '60', width ='60')
)
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
source("~/R/R Projects/BioR Insights/ui/dashboardBody.R", echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
updateSelectInput(session, "sctcolorColumn", choices = names(sctdata()))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
datatable(usdata())  # Puedes ajustar el número de filas por página según sea necesario
body <- dashboardBody(
tabItems(
tabItem(
tabName = "wbr",
tags$div(
class = "page-container",
tags$div(
class = "custom-header",
tags$img(src = "logo2.png", class ="logop"),
tags$div(
tags$div("BioR Insights", class = "custom-h1"),
tags$div("Transformando el Análisis Bioinformático", class = "custom-sub")
, class = "titulosimg"),
),
tags$div(
class = "custom-section",
tags$div(
class = "custom-p",
"Bienvenido a ",
tags$span("BioR Insights", class = "highlight-text"),
", la plataforma que simplifica y democratiza el análisis de datos biológicos.
En un mundo donde la bioinformática desempeña un papel crucial, hemos creado una herramienta
potente pero fácil de usar para que tanto expertos como principiantes exploren el vasto mundo de la
información genómica."
),
tags$div(
class = "custom-p",
"Enfrentamos el desafío de hacer que la bioinformática sea ",
tags$span("accesible", class = "highlight-text"),
" para todos. Nuestra interfaz intuitiva te permite cargar conjuntos de datos biológicos con facilidad
y configurar análisis de manera sencilla, sin necesidad de conocimientos especializados."
),
tags$div(
class = "custom-p",
"¿Qué te ofrece ",
tags$span("BioR Insights", class = "highlight-text"),
"?"
),
tags$ul(
class = "custom-list",
tags$li(
tags$span("Análisis de Expresión Génica:", class = "highlight-text"),
" Comprende la actividad de los genes de manera fácil y efectiva."
),
tags$li(
tags$span("Agrupamiento Jerárquico:", class = "highlight-text"),
" Explora patrones y relaciones en tus datos biológicos."
),
tags$li(
tags$span("Visualizaciones Impactantes:", class = "highlight-text"),
" Gráficos y representaciones visuales para interpretar resultados de manera rápida."
),
tags$li(
tags$span("Exportación Versátil:", class = "highlight-text"),
" Exporta resultados en formatos como CSV, imágenes y documentos PDF."
)
),
tags$div(
class = "custom-p",
"En ",
tags$span("BioR Insights", class = "highlight-text"),
", nos apasiona acelerar la ",
tags$span("investigación científica", class = "highlight-text"),
" al hacer que las herramientas de análisis sean más accesibles. Nuestro enfoque no solo ahorra tiempo,
sino que también optimiza los recursos, permitiendo decisiones más rápidas y fundamentadas en la investigación biológica y médica."
)
),
tags$style(HTML("
.page-container {
font-family: 'Arial', sans-serif;
margin: 0;
padding: 0;
background-color: ##333;
color: black;
}
.custom-header {
color: black;
margin-right: 12px;
display: flex;
}
.logop {
max-width: 120px;
margin-right: 10px;
}
.titulosimg{
align-self : center;
}
.custom-section {
max-width: 90%;
margin: 2% auto;
pading : 2%
box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
border-radius: 8px;
}
.custom-h1 {
color: rgb(26, 188, 156);
margin-bottom: 1%;
font-size : 18px;
}
.custom-sub{
font-size 20px:
}
.custom-p {
line-height: 1.6;
font-size: 15px;
}
.highlight-text {
color: #222d32;
font-weight: bold;
}
.custom-list li {
margin :1%;
}
" )
)
)
),
#################   Relaciones y Correlación  ####################
tabItem(
tabName = "htm",
h1("Heat Map"),
plotOutput("heatmap_plot")
),
#--------------------------------------------------------------------------#
tabItem(
tabName = "sct",
fluidRow(
column(width = 3,
fileInput(inputId = "sctFile", label = "Cargar Archivo", accept = ".csv,.xlsx", placeholder = "DIEGO ES GAY")
),
column(width = 3,
selectInput(inputId = "sctcolorColumn", label = "Columna para Colores", choices = NULL)
),
column(width = 3,
selectInput(inputId = "slitpx", label = "Eje x", choices = NULL)
),
column(width = 3,
selectInput(inputId = "slitpy", label = "Eje y", choices = NULL)
)
)
,
# Salida para el gráfico de dispersión
plotlyOutput("ScatterPlot"),
# Salida para la tabla interactiva
dataTableOutput("sctdataTable")
),
#--------------------------------------------------------------------------#
tabItem(
tabName = "vd",
h1("Venn Diagram"), tableOutput("venn_table")
),
#--------------------------------------------------------------------------#
tabItem(
tabName = "upt",
fluidRow(
column(width = 4,fileInput("usfile", "Seleccione un archivo CSV")
),
column(width = 4,selectInput("usvar_set", "Seleccione las variables para el UpSet", choices = NULL, multiple = TRUE)
),
column(width = 4,actionButton("update_plot", "Actualizar Gráfico"))
),
#downloadButton("download_plot", "Descargar Gráfico"),
plotOutput("upsetPlot"),
DTOutput("upsetTable")
),
#################   Clasificación, rango (ranking)  ####################
tabItem(
tabName = "bc",
fluidRow(
column(width = 3,
fileInput(inputId = "bc_file", label = "Cargar archivo CSV", accept = ".csv")
),
column(width = 3,
selectInput(inputId = "bc_x_col", label = "Seleccionar columna para el eje X", choices = NULL)
),
column(width = 3,
selectInput(inputId = "bc_y_col", label = "Seleccionar columna para el eje Y", choices = NULL)
),
column(width = 3,
selectInput(inputId = "bc_color_col", label = "Seleccionar columna para la coloración", "")
)
),
plotlyOutput("bc_bar_chart"),
dataTableOutput("bcdataTable")
),
####################       Parte de un todo    ##########################
#################   Evolucion y cambios en el tiempo     #####################
#############################     Mapas       #############################
tabItem(
tabName = "bmp",
fluidRow(
column(width = 3,
selectInput("bbmx_var", "Seleccionar variable para el eje X", "")
),
column(width = 3,
selectInput("bbmy_var", "Seleccionar variable para el eje Y", "")
),
column(width = 3,
selectInput("bbmcolor_var", "Seleccionar variable para la coloración", "")
),
column(width = 3,
selectInput("bbmsize_var", "Seleccionar variable para el tamaño de las burbujas", "")
)
),
fileInput("bbm_file", "Cargar archivo CSV"),
plotlyOutput("bubbleChart"),
DTOutput("bubbledataTable")
),
#--------------------------------------------------------------------------#
#####################       BASIC CHARTS        ##################
tabItem(
tabName = "lp",
fluidRow(
column(width = 3,
fileInput("lp_file", "Subir archivo CSV")
),
column(width = 3,
checkboxInput("lp_header", "¿El archivo tiene encabezados?", TRUE)
),
column(width = 3,
selectInput("lpx_column", "Seleccionar columna para el eje X", "")
),
column(width = 3,
selectInput("lpy_column", "Seleccionar columna para el eje Y", "")
)
),
plotlyOutput("lp_plot"),
DTOutput("lp_table")
),
#--------------------------------------------------------------------------#
tabItem(
tabName = "dp",
fluidRow(
column(width = 3,
fileInput("dpfile", "Subir archivo CSV")
),
column(width = 3,
selectInput("dpx_axis", "Seleccionar eje x", "")
),
column(width = 3,
selectInput("dpy_axis", "Seleccionar eje y", "")
),
column(width = 3,
selectInput("dpadditional_trace", "Agregar traza adicional", "")
)
),
fluidRow(
column(width = 3,
textInput("dptextinput","ingresa el titulo de tu grafica",placeholder = "titulo")
),
column(width = 3,
actionButton("dpupdate_plot", "Actualizar gráfico")
)
),
plotlyOutput("customDotPlot"),
dataTableOutput("dpdataTable")
),
#####################     Statistical Charts      ##################
tabItem(
tabName = "his",
fluidRow(
column(width = 4,fileInput("hisfile", "Selecciona un archivo CSV")),
column(width = 4,selectInput("hiscolumna", "Selecciona una columna", "")),
column(width = 4,helpText("Nota: Asegúrate de que el archivo tenga una columna numérica para el histograma."))
),
plotlyOutput("histograma"),
dataTableOutput("hisdataTable")
),
#--------------------------------------------------------------------------#
tabItem(
tabName = "bp",
fluidRow(
column(width = 3,fileInput("bpfile", "Seleccionar archivo CSV", accept = ".csv")),
column(width = 3,selectInput("bpbpx_axis", "Seleccionar eje X:", "")),
column(width = 3,selectInput("bpy_axis", "Seleccionar eje Y:", "")),
column(width = 3,selectInput("bpcategory_var", "Seleccionar variable categórica:", ""))
),
plotlyOutput("bpboxplot"),
DTOutput("bp_dataTable")
),
#####################     TRANSFORM      ####################
tabItem(
tabName = "gb",
fluidRow(
column(width = 3,fileInput("gbfile", "Subir archivo CSV")),
column(width = 3,selectInput("gbx_axis", "Selecciona el eje X:", "")),
column(width = 3,selectInput("gby_axis", "Selecciona el eje Y:", "")),
column(width = 3,selectInput("gbagrupar", "Agrupar por:", ""))
),
plotlyOutput("group_vy"),
dataTableOutput("gbdataTable")
),
tabItem(
tabName = "abu",
tags$div(
tags$h1("Who are involved is BioR Insights?", class = "titulo-principal"),
tags$style(HTML("
.titulo-principal {
font-size: 2rem;
text-align: center;
font-weight: bold;
}
html {
box-sizing: border-box;
}
*,
*:before,
*:after {
box-sizing: inherit;
}
.imgperfil {
max-width: 30%;
}
.subtitulo {
font-size: 1.5rem;
}
.contenedor {
max-width: 1200px;
width: 95%;
margin: 0 auto;
text-align: center;
}
.entrada-blog a {
display: inline-block;
background-color: aliceblue;
color: black;
padding: 10px 20px;
text-decoration: none;
font-weight: bold;
text-transform: uppercase;
font-size: 1rem;
}
@media (min-width: 768px) {
.dos-columnas {
display: grid;
grid-template-columns: 50% 50%;
column-gap: 2rem;
padding: 3%;
padding-top: 0;
width: 80%;
height: 40%;
}
.entrada-blog {
padding-bottom: 5%;
}
}
")),
tags$div(
class = "contenedor dos-columnas",
tags$article(
class = "entrada-blog",
tags$img(src = "RicardoSalazar.png", class = "imgperfil"),
tags$h2("Ing.Edgar Ricardo Salazar Sesenes", class = "subtitulo"),
tags$p("Maecenas maximus urna vitae nisl semper, id volutpat ipsum scelerisque. Aenean nec ipsum finibus,
eleifend dolor at, venenatis risus. Quisque varius orci et augue scelerisque luctus.", class = "parrafo"),
tags$a(href = "https://github.com/RicardoSalazar27", "Leer más", class = "enlace")
),
tags$article(
class = "entrada-blog",
tags$img(src = "GaelVillalobos.png", class = "imgperfil"),
tags$h2("Ing.Cristian Gael Guerrero Villalobos", class = "subtitulo"),
tags$p("Maecenas maximus urna vitae nisl semper, id volutpat ipsum scelerisque. Aenean nec ipsum finibus,
eleifend dolor at, venenatis risus. Quisque varius orci et augue scelerisque luctus.", class = "parrafo"),
tags$a(href = "https://github.com/xtiangro", "Leer más", class = "enlace")
),
tags$article(
class = "entrada-blog",
tags$img(src = "MiguelVillalobos.png", class = "imgperfil"),
tags$h2("Dr.Miguel Angel Villalobos", class = "subtitulo"),
tags$p("Maecenas maximus urna vitae nisl semper, id volutpat ipsum scelerisque. Aenean nec ipsum finibus,
eleifend dolor at, venenatis risus. Quisque varius orci et augue scelerisque luctus.", class = "parrafo"),
tags$a("#", "Leer más", class = "enlace")
),
tags$article(
class = "entrada-blog",
tags$img(src = "GaelVillalobos.png", class = "imgperfil"),
tags$h2("Dr.Santiago Valentin Galvan Gordillo", class = "subtitulo"),
tags$p("Maecenas maximus urna vitae nisl semper, id volutpat ipsum scelerisque. Aenean nec ipsum finibus,
eleifend dolor at, venenatis risus. Quisque varius orci et augue scelerisque luctus.", class = "parrafo"),
tags$a("#", "Leer más", class = "enlace")
)
)
)
)
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("~/R/R Projects/BioR Insights/ui/dashboardBody.R", echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("~/R/R Projects/BioR Insights/ui/dashboardBody.R", echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
