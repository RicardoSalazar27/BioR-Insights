shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shiny.semantic")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
update.packages()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#install.packages("shinydashboard")
install.packages("shinyWidgets")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp('~/R/R Projects/Curso Shiny Apps/Section 6 - Desinging Interactive Plots/Using Ggplot part 1')
runApp()
shiny::runApp()
shiny::runApp()
library(shinydashboard)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
load("~/R/R Projects/Curso Shiny Apps/Section7 CostumizeUi/.RData")
shiny::runApp()
runApp()
runApp()
version
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#install.packages("shinydashboard")
#install.packages("devtools")
#install.packages("shinyWidgets")
#devtools::install_github("dreamRs/fontawesome")
install.packages("shinyjs")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp('clases')
runApp('clases')
runApp('clases')
runApp('clases')
runApp('clases')
file.exists("clases/dashboardSidebar.R")
runApp('clases')
runApp('clases')
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem(text = "Relaciones Y Coorelacion", tabName = "ryc", icon = icon("dashboard"),
menuSubItem("Heatmap", tabName = "htm", icon = icon("th")),
menuSubItem("ScatterPlot", tabName = "stp", icon = icon("th")),
menuSubItem("Venn diagram", tabName = "vd", icon = icon("th")),
menuSubItem("Upset", tabName = "upt", icon = icon("th"))
),
menuItem(text = "Clasificacion y ranking", tabName = "cry", icon = icon("th"),
menuSubItem("Bar plot", tabName = "bp", icon = icon("th"))
),
menuItem(text = "Parte De un todo", tabName = "pdt", icon = icon("th"),
menuSubItem("Pie chart", tabName = "pc", icon = icon("th")),
menuSubItem("Stacked barplot", tabName = "sb", icon = icon("th")),
menuSubItem("Denograma", tabName = "den", icon = icon("th"))
),
menuItem(text = "Evolucion en el tiempo", tabName = "evt", icon = icon("th"),
menuSubItem("Grafico de lineas y puntos", tabName = "glp", icon = icon("th"))
),
menuItem(text = "Mapas", tabName = "maps", icon = icon("th"),
menuSubItem("Choropleth map", tabName = "cm", icon = icon("th")),
menuSubItem("Connection", tabName = "connt", icon = icon("th")),
menuSubItem("Bubble map", tabName = "bmp", icon = icon("th"))
)
)
)
runApp('clases')
runApp('clases')
runApp('clases')
getwd()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
plotOutput("scatter_plot")
library(shiny)
library(ggplot2)
selectInput("x_var", "Variable X", "")
selectInput("y_var", "Variable Y", "")
selectInput("color_var", "Color variable", "")
actionButton("update_plot", "Actualizar Plot")
plotOutput("scatter_plot")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
body <- dashboardBody(
tabItems(
tabItem(tabName = "htm", # Nombre del menú
h2("HeatMap"),
# Puedes agregar más contenido específico para este menú
),
tabItem(tabName = "stp", # Nombre del submenú
h3("Scatter Plot"),
# Puedes agregar más contenido específico para este submenú
),
tabItem(tabName = "vd", # Nombre del submenú
h3("Venn diagram"),
# Puedes agregar más contenido específico para este submenú
),
tabItem(tabName = "upt", # Nombre del menú
h2("Upset"),
# Puedes agregar más contenido específico para este menú
),
tabItem(tabName = "bp", # Nombre del submenú
h3("Contenido de Bar plot"),
# Puedes agregar más contenido específico para este submenú
),
# Agrega más tabItems según sea necesario
)
)
body <- dashboardBody(
tabItems(
tabItem(tabName = "htm", # Nombre del menú
h2("HeatMap"),
# Puedes agregar más contenido específico para este menú
),
tabItem(tabName = "stp", # Nombre del submenú
h3("Scatter Plot"),
# Puedes agregar más contenido específico para este submenú
),
tabItem(tabName = "vd", # Nombre del submenú
h3("Venn diagram"),
# Puedes agregar más contenido específico para este submenú
),
tabItem(tabName = "upt", # Nombre del menú
h2("Upset"),
# Puedes agregar más contenido específico para este menú
),
tabItem(tabName = "bp", # Nombre del submenú
h3("Contenido de Bar plot"),
# Puedes agregar más contenido específico para este submenú
),
# Agrega más tabItems según sea necesario
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
iris
print(data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
header <- dashboardHeader(
#title = "BioR Insghts"
#title = tags$img(src='GoZs=/0x0:2012x1341/1400x788/filters:focal(0x0:2012x1341):format(jpeg)/cdn.vox-cdn.com/uploads/chorus_image/image/47070706/google2.0.0.jpg', height = '40', width ='40')
#title = tags$img(src='https://drive.google.com/file/d/1rW7bKd92z6ooMHTgCJL-FkoPmwaOvmS6/view', height = '40', width ='40')
title = "Bio R Insghts", tags$img(src="logo.png",height = '20', width ='20')
#title = tags$img(src='https://cdn.vox-cdn.com/thumbor/Ous3VQj1sn4tvb3H13rIu8eGoZs=/0x0:2012x1341/1400x788/filters:focal(0x0:2012x1341):format(jpeg)/cdn.vox-cdn.com/uploads/chorus_image/image/47070706/google2.0.0.jpg', height = '60', width ='60')
)
runApp()
runApp()
shiny::runApp()
library(plotly)
runApp()
runApp()
# app.r
install.packages("ploty")
# app.r
install.packages("plotly")
# app.r
install.packages("plotly")
install.packages("plotly")
shiny::runApp()
runApp()
runApp()
runApp()
runApp('~/R/R Projects/Curso Shiny Apps/ScatterPlot')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# app.r
install.packages("UpSetR")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
# Función reactiva para cargar datos desde el archivo CSV
data <- reactive({
req(input$file)
df <- read.csv(input$file$datapath, header = TRUE)
return(df)
})
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(reactive_data)
View(server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
